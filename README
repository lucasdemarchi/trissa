Copyright (C) 2008-2009 - Lucas De Marchi

Trissa is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License version 2 as published by
the Free Software Foundation.

Trissa is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Trissa; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, 
Boston, MA  02110-1301  USA

1. Dependencies
================

You will need the following packages to compile Trissa:
    * CEGUI - http://www.cegui.org.uk/
      The only version tested is 0.6.2. It's possible to work with other
      versions, but not guaranteed
 
    * OIS - http://sourceforge.net/projects/wgois/
      Version 1.2 is known to work, although older versions probably work too.

    * Nvidia CG Toolkit - use your distributions' package

    * OGRE - http://www.ogre3d.org
      You will need version 1.7. As of now, it's not released yet, so you will
      need to compile it yourself from svn.

    * Boost - http://www.boost.org/
      It's advised to have the complete boost package and the best way to
      accomplish this is using your distribution package. All versions of
      boost in recent distributions are known to work. If you want to compile
      from source, you will need:
          - Filesystem:
            http://www.boost.org/doc/libs/1_39_0/libs/filesystem/doc/index.htm
          - Program Options:
            http://www.boost.org/doc/libs/1_39_0/doc/html/program_options.html
          - Thread:
            http://www.boost.org/doc/libs/1_39_0/doc/html/thread.html

    * Scons - http://www.scons.org/
      Versions 1.2 and 1.1 are known to work. Use your distribution's package


1.1 Supported distros
---------------------

1.1.1 Ubuntu [NOT TESTED YET]
    
   CEGUI, OIS, Nvidia CG Toolkit and OGRE are available in PPA. To use it
   you'll need to add a repository (See available packages in
   https://launchpad.net/~andrewfenn/+archive/ogredev):

       $ sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 6FED7057

   See https://launchpad.net/+help/soyuz/ppa-sources-list.html on how to add
   the following PPA repository:

       * [9.04 - Jaunty]
           deb http://ppa.launchpad.net/andrewfenn/ogredev/ubuntu jaunty main 
           deb-src http://ppa.launchpad.net/andrewfenn/ogredev/ubuntu jaunty main
	   
       * [8.10 - Intrepid]
           deb http://ppa.launchpad.net/andrewfenn/ogredev/ubuntu intrepid main 
           deb-src http://ppa.launchpad.net/andrewfenn/ogredev/ubuntu intrepid main 

       * [8.04 - Hardy]
           deb http://ppa.launchpad.net/andrewfenn/ogredev/ubuntu hardy main 
           deb-src http://ppa.launchpad.net/andrewfenn/ogredev/ubuntu hardy main 

   Install dependencies:
   
       $ sudo apt-get install silly ois cegui nvidia-cg-toolkit ogre
       $ sudo apt-get install libboost-program-options1.37-dev \
           libboost-filesystem1.37-dev libboost1.37-dev
       $ sudo apt-get install scons

1.1.2 Archlinux

   Packages are available in AUR. The best way to install them is through
   yaourt (note that other dependencies are installed automatically):

       $ yaourt -S cegui ogre
       $ yaourt -S boost scons

1.1.3 Fedora [NOT TESTED YET]
   
   Fedora 11 provides the following packages:
       OIS   - 1.0
       CEGUI - 1.6.2
       ogre  - 1.6.1
       boost - 1.37
       scons - 1.2.0
   
   rpmfusion repository:
       Nvidia CG Toolkit - 2.0.0015

   Add rpmfusion repository:
       $ sudo rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm
            http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm
       $ sudo yum update
       $ sudo yum install ois cegui ogre boost scons cg
     

1.2 From source
---------------

     If your distro doesn't have packages for the dependencies listed above
     (or if they are too old), you can install them from source. Below is a
     quick and dirty guide to get them working. Refer to their websites for
     more informations.

     To compile CEGUI from source do:
          $ ./configure --sysconfdir=/etc --enable-devil --enable-silly \
             --disable-xerces-c --with-default-image-codec=SILLYImageCodec \
             --disable-lua
          $ make
          # make install
     
     To compile OIS from source code, download the latest version and do:
          $ ./bootstrap
          $ ./configure
          $ make
          # make install

     To install ogre from source see
     http://www.ogre3d.org/developers/subversion how to fetch the latest
     svn version and compile it with (you'll need cmake):
          $ cmake-gui 
          $ make
          # make install


2. Compiling Trissa
===================

You have a bunch of options to choose when compiling Trissa. The default is to
compile with debug enabled. To disable it, pass mode=optimized option. See
scons --help for more options:

    prefix: The install path "prefix"
        default: /usr/local
        actual: /usr/local
    
    mode: Defines how Trissa will be built (optimized|optimized_thishost|debug)
        default: debug
        actual: debug
    
    configfile: Path to configuration file ( /path/to/configfile )
        default: /etc/trissa.conf
        actual: /etc/trissa.conf
    
    version: Auto-update version options (auto|release|keepold)
        default: auto
        actual: auto
    
    enable_ui3d: Compile 3D interface (yes|no)
        default: True
        actual: True

Trissa is in development version. It's not a well self-contained package.
prefix and configfile options have no effects yet.

Mode options:
    - debug: compile with debug flag on (you'll see a lot of output in
      stdout/stderr) and with compiler flags to be able to use gdb to debug it
    - optimized: it will compile without debugging symbols and with -O3
      optimization
    - optimized_thishost: it will detect optimization flags that your
      processor supports and pass it to gcc (for example, SSE/MMX/...)



3. Intalling and running
========================

Do not install Trissa. It's not ready yet. Instead, run it inside the build
directories. Inside build directory, run ./trissa --help for options.
